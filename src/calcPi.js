
/**
 * Function approximates Pi by using the output from a random number generator.
 * The function plots numPoints points with coordinates generated by the
 * provided function or with the random() function from the Math module.
 * The more evenly distributed the random numbers, the more accurate the
 * approximation will be. Such a function can be passed with the optional
 * func parameter.
 *
 * Complexity is O(n).
 *
 * @param numPoints An integer that represents the number of points used.
 * @param func A function that returns a random number in the range [0,1)
 * @return A double representing an approximation of Pi
 */
const approxPi = (numPoints, func = Math.random) => {
    let inside = 0 // A counter for the points inside the unit circle

    // Calculate numPoints points and store how many of them are within the unit circle
    for (let i = 0; i < numPoints; i++) {
        let x = func()
        let y = func()

        // If the point is less than one unit from the origin
        if (Math.sqrt(x**2 + y**2) < 1) {
            inside++ // Increment the inside counter
        }
    }

    // Pi ~ 4 * (inside/total points)
    return inside / numPoints * 4
}

module.exports = {
    approxPi
}